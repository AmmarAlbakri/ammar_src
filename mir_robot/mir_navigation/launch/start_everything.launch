<?xml version="1.0"?>
<launch>

    <include file="$(find mir_gazebo)/launch/mir_maze_world.launch" />
    <node pkg="rosservice" type="rosservice" name="rosservice" args="call --wait /gazebo/unpause_physics" />

    <include file="$(find mir_navigation)/launch/amcl.launch">
        <arg name="initial_pose_x" value="10.0" />
        <arg name="initial_pose_y" value="10.0" />
    </include>

    <include file="$(find mir_navigation)/launch/start_planner.launch">
        <arg name="map_file" value="$(find mir_gazebo)/maps/maze.yaml" />
        <arg name="with_virtual_walls" value="false" />
        <!-- <arg name="virtual_walls_map_file" value="$(find mir_gazebo)/maps/maze_virtual_walls.yaml" /> -->
    </include>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mir_navigation)/rviz/navigation.rviz" />

    <node name="check_laser" pkg="mir_navigation" type="check_laser.py" output="screen"/>
    <node name="filter_cmd" pkg="mir_navigation" type="filter_cmd.py" output="screen"/>

    <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen"/>
    <node name="save_goal" pkg="mir_navigation" type="save_pos_as_goal.py" output="screen"/>
    <node name="send_goal" pkg="mir_navigation" type="send_goal.py" output="screen"/>
    <node name="run_mission" pkg="mir_navigation" type="run_mission.py" output="screen"/>
    
    <include file="$(find mir_navigation)/launch/zones.launch"/>
    <include file="$(find mir_navigation)/launch/service_servers.launch"/>

</launch>